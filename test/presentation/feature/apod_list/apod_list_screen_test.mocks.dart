// Mocks generated by Mockito 5.4.4 from annotations
// in nasa/test/presentation/feature/apod_list/apod_list_screen_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;
import 'dart:ui' as _i15;

import 'package:dartz/dartz.dart' as _i3;
import 'package:flutter/material.dart' as _i11;
import 'package:flutter/src/widgets/framework.dart' as _i13;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i17;
import 'package:nasa/src/core/error/failures.dart' as _i8;
import 'package:nasa/src/domain/entity/apod.dart' as _i9;
import 'package:nasa/src/domain/repository/apod_repository.dart' as _i2;
import 'package:nasa/src/domain/use_case/clear_cache.dart' as _i10;
import 'package:nasa/src/domain/use_case/get_apod_list.dart' as _i4;
import 'package:nasa/src/domain/use_case/search_apod.dart' as _i6;
import 'package:nasa/src/presentation/core/navigation/navigation_service.dart'
    as _i12;
import 'package:nasa/src/presentation/feature/apod_list/controller/pagination_controller.dart'
    as _i14;
import 'package:nasa/src/presentation/feature/apod_list/controller/search_controller.dart'
    as _i16;
import 'package:nasa/src/presentation/feature/apod_list/state/pagination_state.dart'
    as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApodRepository_0 extends _i1.SmartFake
    implements _i2.ApodRepository {
  _FakeApodRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGetApodList_2 extends _i1.SmartFake implements _i4.GetApodList {
  _FakeGetApodList_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePaginationState_3 extends _i1.SmartFake
    implements _i5.PaginationState {
  _FakePaginationState_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSearchApods_4 extends _i1.SmartFake implements _i6.SearchApods {
  _FakeSearchApods_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GetApodList].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetApodList extends _i1.Mock implements _i4.GetApodList {
  MockGetApodList() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApodRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeApodRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ApodRepository);

  @override
  _i7.Future<_i3.Either<_i8.Failure, List<_i9.Apod>>> call(
    DateTime? startDate,
    DateTime? endDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            startDate,
            endDate,
          ],
        ),
        returnValue: _i7.Future<_i3.Either<_i8.Failure, List<_i9.Apod>>>.value(
            _FakeEither_1<_i8.Failure, List<_i9.Apod>>(
          this,
          Invocation.method(
            #call,
            [
              startDate,
              endDate,
            ],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.Failure, List<_i9.Apod>>>);
}

/// A class which mocks [SearchApods].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchApods extends _i1.Mock implements _i6.SearchApods {
  MockSearchApods() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApodRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeApodRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ApodRepository);

  @override
  _i7.Future<_i3.Either<_i8.Failure, List<_i9.Apod>>> call(String? query) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [query],
        ),
        returnValue: _i7.Future<_i3.Either<_i8.Failure, List<_i9.Apod>>>.value(
            _FakeEither_1<_i8.Failure, List<_i9.Apod>>(
          this,
          Invocation.method(
            #call,
            [query],
          ),
        )),
      ) as _i7.Future<_i3.Either<_i8.Failure, List<_i9.Apod>>>);
}

/// A class which mocks [ClearCache].
///
/// See the documentation for Mockito's code generation for more information.
class MockClearCache extends _i1.Mock implements _i10.ClearCache {
  MockClearCache() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.ApodRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeApodRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.ApodRepository);

  @override
  _i7.Future<void> call() => (super.noSuchMethod(
        Invocation.method(
          #call,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}

/// A class which mocks [NavigatorObserver].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigatorObserver extends _i1.Mock implements _i11.NavigatorObserver {
  MockNavigatorObserver() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void didPush(
    _i11.Route<dynamic>? route,
    _i11.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPush,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didPop(
    _i11.Route<dynamic>? route,
    _i11.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didPop,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didRemove(
    _i11.Route<dynamic>? route,
    _i11.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didRemove,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didReplace({
    _i11.Route<dynamic>? newRoute,
    _i11.Route<dynamic>? oldRoute,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #didReplace,
          [],
          {
            #newRoute: newRoute,
            #oldRoute: oldRoute,
          },
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStartUserGesture(
    _i11.Route<dynamic>? route,
    _i11.Route<dynamic>? previousRoute,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #didStartUserGesture,
          [
            route,
            previousRoute,
          ],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void didStopUserGesture() => super.noSuchMethod(
        Invocation.method(
          #didStopUserGesture,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [NavigationService].
///
/// See the documentation for Mockito's code generation for more information.
class MockNavigationService extends _i1.Mock implements _i12.NavigationService {
  MockNavigationService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<T?> navigateTo<T>(
    _i13.BuildContext? context,
    String? route, {
    Object? arguments,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #navigateTo,
          [
            context,
            route,
          ],
          {#arguments: arguments},
        ),
        returnValue: _i7.Future<T?>.value(),
      ) as _i7.Future<T?>);
}

/// A class which mocks [PaginationController].
///
/// See the documentation for Mockito's code generation for more information.
class MockPaginationController extends _i1.Mock
    implements _i14.PaginationController {
  MockPaginationController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.GetApodList get getApodList => (super.noSuchMethod(
        Invocation.getter(#getApodList),
        returnValue: _FakeGetApodList_2(
          this,
          Invocation.getter(#getApodList),
        ),
      ) as _i4.GetApodList);

  @override
  _i5.PaginationState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakePaginationState_3(
          this,
          Invocation.getter(#state),
        ),
      ) as _i5.PaginationState);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<List<_i9.Apod>> loadPage() => (super.noSuchMethod(
        Invocation.method(
          #loadPage,
          [],
        ),
        returnValue: _i7.Future<List<_i9.Apod>>.value(<_i9.Apod>[]),
      ) as _i7.Future<List<_i9.Apod>>);

  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i15.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i15.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [ApodSearchController].
///
/// See the documentation for Mockito's code generation for more information.
class MockApodSearchController extends _i1.Mock
    implements _i16.ApodSearchController {
  MockApodSearchController() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.SearchApods get searchApods => (super.noSuchMethod(
        Invocation.getter(#searchApods),
        returnValue: _FakeSearchApods_4(
          this,
          Invocation.getter(#searchApods),
        ),
      ) as _i6.SearchApods);

  @override
  String get query => (super.noSuchMethod(
        Invocation.getter(#query),
        returnValue: _i17.dummyValue<String>(
          this,
          Invocation.getter(#query),
        ),
      ) as String);

  @override
  bool get isSearching => (super.noSuchMethod(
        Invocation.getter(#isSearching),
        returnValue: false,
      ) as bool);

  @override
  bool get hasListeners => (super.noSuchMethod(
        Invocation.getter(#hasListeners),
        returnValue: false,
      ) as bool);

  @override
  _i7.Future<List<_i9.Apod>> search(String? query) => (super.noSuchMethod(
        Invocation.method(
          #search,
          [query],
        ),
        returnValue: _i7.Future<List<_i9.Apod>>.value(<_i9.Apod>[]),
      ) as _i7.Future<List<_i9.Apod>>);

  @override
  void reset() => super.noSuchMethod(
        Invocation.method(
          #reset,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void addListener(_i15.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #addListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void removeListener(_i15.VoidCallback? listener) => super.noSuchMethod(
        Invocation.method(
          #removeListener,
          [listener],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void dispose() => super.noSuchMethod(
        Invocation.method(
          #dispose,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyListeners() => super.noSuchMethod(
        Invocation.method(
          #notifyListeners,
          [],
        ),
        returnValueForMissingStub: null,
      );
}
